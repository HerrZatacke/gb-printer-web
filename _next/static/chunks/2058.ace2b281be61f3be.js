"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2058],{72058:(e,n,r)=>{r.r(n),r.d(n,{default:()=>i});let i="# [Game Boy Camera Gallery](https://github.com/HerrZatacke/gb-printer-web)\n\nGame Boy Camera Gallery ist eine Web-App zum Organisieren, Bearbeiten und Teilen von Aufnahmen der Game Boy Camera.\n\n## [Galerie](/gallery)\nBetrachte und verwalte alle importierten Aufnahmen in einer interaktiven Galerie:\n- Bilder mit Tags versehen\n- Aufnahmen in Bildgruppen zusammenfassen\n- Deine Sammlung filtern\n- Metadaten von aus Savestates von ROMs wie [Photo!](https://github.com/untoxa/gb-photo) oder dem originalen Game Boy Camera ROM anzeigen\n- Bilder auf einem originalen Game Boy Printer mit seriellen Kommunikationsger\xe4ten drucken\n\n### Bildgruppen\nDu kannst verwandte Bilder in Gruppen organisieren:\n- Du kannst Gruppen erstellen, indem du mehrere Bilder ausw\xe4hlst und sie \xfcber das Kontextmen\xfc eines ausgew\xe4hlten Bildes gruppierst\n- Gruppen k\xf6nnen automatisch w\xe4hrend eines Importvorgangs oder beim Generieren von RGB-Bildern erstellt werden\n- Du kannst Bilder ausw\xe4hlen, um sie zwischen Gruppen zu verschieben, ohne notwendigerweise eine neue Gruppe zu erstellen\n\n## [Serielle Kommunikation](/webusb)\nDirekte Verbindung zu Community-Projekt Ger\xe4ten \xfcber WebSerial:\n\n### Drucken auf einem physischen Game Boy Printer\n- Mit aktiviertem WebSerial k\xf6nnen Bilder auf einem originalen Game Boy Printer mit dem [Super Printer Interface](https://github.com/Raphael-Boichot/Yet-another-PC-to-Game-Boy-Printer-interface/) von Rapha\xebl Boichot gedruckt werden\n\n### Cartridge-Kommunikation\n- WebSerial in Chrome aktivieren, um direkt mit dem GBxCart zu kommunizieren (nur Desktop)\n- Ein Cartridge-Leser mit Lesserkumas Firmware zum Laden von Savestates verwenden (z.B. [GBxCart RW](https://www.gbxcart.com/), [JoeyJr](https://bennvenn.myshopify.com/products/usb-gb-c-cart-dumper-the-joey-jr), [GBFlash](https://github.com/simonkwng/GBFlash))\n\n### Game Boy Printer Emulatoren\nEinen Printer-Emulator \xfcber WebSerial verbinden, um direkt von der Game Boy Camera in die WebApp zu drucken:\n- [arduino-gameboy-printer-emulator](https://github.com/mofosyne/arduino-gameboy-printer-emulator) – Arduino-basierter Emulator von mofosyne\n- [pico-gb-printer](https://github.com/untoxa/pico-gb-printer/) – Raspberry Pi Pico Implementierung von untoxa\n- [NeoGB-Printer](https://github.com/zenaror/NeoGB-Printer) – Arduino Nano Implementierung von Rafael Zenaro\n- [wifi-gbp-emulator](https://github.com/HerrZatacke/wifi-gbp-emulator) – ESP8266 WiFi-Emulator mit integriertem Webserver, der diese WebApp hosten kann\n\n## [Import](/import)\nBilder aus verschiedenen Quellen per Drag-and-Drop importieren:\n- Cartridge-Savestates (`.sav`-Dumps einschlie\xdflich der 1MB-Version von [FlashGBX](https://github.com/lesserkuma/FlashGBX))\n- Game Boy Printer serielle Hex-Logs\n- Bitmap-Dateien von Projekten, die nur einfache Bilder ausgeben\n\n## [Frames](/frames)\nGame Boy Camera Frames hinzuf\xfcgen, bearbeiten und teilen:\n- Ein Bild (vorzugsweise 160 \xd7 144) ablegen, um einen neuen Frame zu erstellen oder Frames w\xe4hrend des Imports aus beliebigen Datenquellen generieren\n- Vollst\xe4ndige Frame-Pakete als JSON importieren/exportieren, um sie mit anderen zu teilen\n\n## [Paletten](/palettes)\nMit Farbpaletten arbeiten:\n- Aus integrierten Paletten w\xe4hlen\n- Benutzerdefinierte Paletten entwerfen\n- Farben aus normalen Fotografien extrahieren, um neue Paletten zu erstellen\n- Paletten als JSON importieren/exportieren, um sie mit anderen zu teilen\n\n## [Plugins](/settings/plugins)\nDie Toolbox mit Community-Plugins erweitern:\n- „Average“ – Zusammengesetzte Bilder aus mehreren Aufnahmen erstellen (HDR-Stil)\n- „Custom Pixels“ – Einzelne Pixel durch detaillierte Darstellungen ersetzen\n\n## [Dropbox Sync](/settings/dropbox)\nHalte deine Galerie \xfcber alle Ger\xe4te hinweg synchron. Aktiviere Dropbox und du kannst deine Bibliothek synchronisieren.\n"}}]);